apiVersion: v1
kind: Namespace
metadata:
  name: ks-load-s
---
apiVersion: v1
kind: Namespace
metadata:
  name: ks-load-c
---
apiVersion: v1
kind: Namespace
metadata:
  name: ks-load
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: ks-load-s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      imagePullSecrets:
        - name: my-docker-secret
      containers:
      - name: http-server
        image: kubeshark/k6s-load-server:v52.3.88
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        - containerPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: server
  namespace: ks-load-s
spec:
  selector:
    app: server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
    - protocol: TCP
      port: 443
      targetPort: 443
      name: https
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k6-load-test
  namespace: ks-load-c
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k6-load-test
  template:
    metadata:
      labels:
        app: k6-load-test
    spec:
      imagePullSecrets:
        - name: my-docker-secret
      containers:
      - name: k6
        image: kubeshark/k6s-load-test:v52.3.88
        imagePullPolicy: IfNotPresent
        env:
          - name: VUS
            value: "10"
          - name: DURATION
            value: "5m"
          - name: URL
            value: "http://server.ks-load-s.svc.cluster.local/"
          - name: SLEEP
            value: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: k6-load-test
  namespace: ks-load-c
spec:
  selector:
    app: k6-load-test
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-http2-client
  namespace: ks-load
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-http2-client
  template:
    metadata:
      labels:
        app: go-http2-client
    spec:
      imagePullSecrets:
        - name: my-docker-secret
      containers:
      - name: go-http2-client
        image: kubeshark/go-http2-client:v52.3.88
        imagePullPolicy: IfNotPresent
        env:
          - name: URL
            value: "http://http2-server.ks-load.svc.cluster.local/"
          - name: "N"
            value: "1"
          - name: "D"
            value: "1"
          - name: "V"
            value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: go-http2-client
  namespace: ks-load
spec:
  selector:
    app: go-http2-client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http2-server
  namespace: ks-load
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http2-server
  template:
    metadata:
      labels:
        app: http2-server
    spec:
      imagePullSecrets:
        - name: my-docker-secret
      containers:
      - name: http2-server
        image: kubeshark/go-http2-server:v52.3.88
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: http2-server
  namespace: ks-load
spec:
  selector:
    app: http2-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
  type: ClusterIP